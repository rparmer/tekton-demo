---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample-ci-triggers-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sample-ci-triggers-sa-rolebinding
  namespace: default
subjects:
- kind: ServiceAccount
  name: sample-ci-triggers-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles # default role created as part of Tekton 'triggers' installation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sample-ci-triggers-sa-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: sample-ci-triggers-sa
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles # default role created as part of Tekton 'triggers' installation
---
apiVersion: v1
kind: Secret
metadata:
  name: sample-ci-github-secret
  namespace: default
type: Opaque
stringData:
  secretToken: "1234567" # This value will be set as the webhook secret in GitHub
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: sample-ci-event-listener
  namespace: default
spec:
  triggers:
    - name: tag-push-events
      interceptors:
        - ref:
            name: github
          params:
            - name: secretRef
              value:
                secretName: sample-ci-github-secret # verify secret passed from webhook matches secret value
                secretKey: secretToken
            - name: eventTypes
              value: ["push"] # only run on push events to GitHub repo
        - name: "only on tag creation"
          ref:
            name: cel
          params:
            - name: filter
              value: > # only run with new tags are created
                body.ref.startsWith('refs/tags') &&
                body.created == true
            - name: overlays
              value:
                - key: tag # parse out tag value from payload
                  expression: "body.ref.split('/')[2]"
      bindings:
        # use TriggerBinding to pass values to TriggerTemplate
        - ref: github-tag-binding

        # static values passed to TriggerTemplate
        - name: image-name
          value: ${image_name}
        - name: path-to-image-context
          value: demo/docker
        - name: chart-path
          value: demo/charts/sample-chart
        - name: gh-pages-url
          value: ${gh_pages_url}
      template:
        ref: sample-ci-pipeline-trigger-template
  resources:
    kubernetesResource:
      spec:
        template:
          spec:
            serviceAccountName: sample-ci-triggers-sa # <--IMPORTANT that this matches service account name created at top of this file
            containers:
              - resources:
                  requests:
                    memory: 64Mi
                    cpu: 250m
                  limits:
                    memory: 128Mi
                    cpu: 500m
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-ci-el-ingress
  namespace: default
spec:
  rules:
  - host: ${ci_event_listerner_ingress_host}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: el-sample-ci-event-listener # service name will be 'el-<EventListener resouce name>'
            port:
              name: http-listener
