apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: sample-ci-pipeline-trigger-template
  namespace: default
spec:
  params: # any params that need to be passed into the pipeline must also be declared here
    - name: git-url
    - name: git-revision
    - name: image-name
    - name: path-to-image-context
    - name: tag
    - name: chart-path
    - name: gh-pages-url
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: sample-ci-pipeline-run- # create unique name automatically
      spec:
        serviceAccountName: sample-pipeline-sa # <-- IMPORTANT make sure this is created before running pipeline (see README)
        pipelineRef:
          name: sample-ci-pipeline
        params:
          - name: git-url
            value: $(tt.params.git-url)
          - name: git-revision
            value: $(tt.params.git-revision)
          - name: image-name
            value: $(tt.params.image-name)
          - name: tag
            value: $(tt.params.tag)
          - name: path-to-image-context
            value: $(tt.params.path-to-image-context)
          - name: chart-path
            value: $(tt.params.chart-path)
          - name: gh-pages-url
            value: $(tt.params.gh-pages-url)
        workspaces:
          - name: shared-data # pvc volume definition (used to share data between tasks)
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
          - name: docker-credentials # kubernetes secret reference to docker regisistry creds
            secret:
              secretName: docker-credentials
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: github-tag-binding
  namespace: default
spec:
  params:
    - name: tag
      value: $(extensions.tag) # extract value from EventListener cel overlay
    - name: git-revision
      value: $(body.head_commit.id) # extract value from event payload
    - name: git-url
      value: $(body.repository.clone_url)
